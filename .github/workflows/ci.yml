name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  app_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.app_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get app version
        id: app_version
        run: |
          pip install -q pkginfo build
          python -m build --wheel .
          VERSION=$(pkginfo dist/*.whl -f version --single)
          echo $VERSION
          echo "::set-output name=version::${VERSION}"
  docker:
    runs-on: ubuntu-latest
    needs: app_version
    env:
      PLATFORMS: linux/amd64,linux/arm64/v8  #,linux/arm/v7
      DOCKERHUB_USERNAME: isac322
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3.5.0
        with:
          flavor: latest=true
          images: ${{ env.DOCKERHUB_USERNAME }}/get_oracle_a1
          tags: |
            type=raw,value=${{ needs.app_version.outputs.version }}
          labels: |
            maintainer=${{ env.DOCKERHUB_USERNAME }}
            org.opencontainers.image.title=get_oracle_a1
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.PLATFORMS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/get_oracle_a1:latest
          cache-to: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/get_oracle_a1:_buildcache,mode=max
      - name: Update repo description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKERHUB_USERNAME }}/get_oracle_a1
